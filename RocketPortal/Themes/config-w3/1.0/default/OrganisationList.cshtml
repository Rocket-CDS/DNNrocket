@inherits DNNrocketAPI.render.DNNrocketTokens<Simplisity.SimplisityRazor>
@using Simplisity;
@using DNNrocketAPI.Components;
@using Rocket.AppThemes.Components;

@AddProcessData("resourcepath", "/DesktopModules/DNNrocket/api/App_LocalResources/")
@AddProcessData("resourcepath", "/DesktopModules/DNNrocket/RocketPortal/App_LocalResources/")

@{
    var organisationData = (OrganisationLimpet)Model.List.First();
    var lp3 = 1;
}

<div>

    <div class="w3-bar searchdata">
            <div class="w3-bar-item w3-button w3-teal w3-padding-8 simplisity_click" s-cmd="portalshops_addsetting" s-return="#systemcontainer" s-fields='{"systemkey":"@portalShop.SystemKey","sitekey":"@portalShop.SiteKey"}'>@ButtonText(ButtonTypes.add)</div>
            <input class="w3-bar-item  w3-right w3-input w3-border w3-light-grey" autocomplete="off" type="text" placeholder="@ResourceKey("DNNrocket.search")..." id="searchtext" onkeyup="searchFunction()">
    </div>

    <div id="datalist" class="w3-container w3-margin-top">

        <table class="w3-table w3-bordered">
            <thead>
                <tr>
                    <th></th>
                    <th></th>
                    <th style="width:64px;"></th>
                    <th style="width:64px;"></th>
                    <th style="width:64px;"></th>
                </tr>
            </thead>
            @foreach (SimplisityRecord r in organisationData.List)
            {
                <tr class="">
                    <td>
                        @TextBox(new SimplisityInfo(r), "genxml/textbox/key", "class='w3-input w3-border' maxlength='250' ", "", false, lp3)
                    </td>
                    <td>
                        <span>@dataClient.ServiceData.Name</span>
                    </td>
                    <td>
                        <b>
                            <span>@dataClient.ServiceData.EngineUrlWithProtocol</span>
                        </b>
                        <div class="w3-tiny">
                            @dataClient.ServiceData.SystemKey
                        </div>
                    </td>
                    <td>
                        <a href="@dataClient.UrlWithProtocol" target="_blank">
                            <span class="material-icons w3-button">
                                preview
                            </span>
                        </a>
                    </td>
                    <td>
                        @if (dataClient.Active)
                        {
                            <span class="material-icons w3-button w3-text-green simplisity_click" s-cmd="dataclients_toggleactive" s-fields='{"portalid":"@(dataClient.PortalId)","sitekey":"@(dataClient.SiteKey)"}'>
                                toggle_on
                            </span>
                        }
                        else
                        {
                            <span class="material-icons w3-button w3-text-red simplisity_click" s-cmd="dataclients_toggleactive" s-fields='{"portalid":"@(dataClient.PortalId)","sitekey":"@(dataClient.SiteKey)"}'>
                                toggle_off
                            </span>
                        }
                    </td>
                    <td>
                        <div class="w3-button simplisity_confirmclick" s-confirm="@ResourceKey("DNNrocket.delete") ?" s-cmd="dataclients_delete" s-fields='{"portalid":"@(dataClient.PortalId)","sitekey":"@(dataClient.SiteKey)"}'>
                            @ButtonIcon(ButtonTypes.delete)
                        </div>
                    </td>
                </tr>

                lp3 + = 1;
            }
        </table>

    </div>
</div>

<script>
    $(document).ready(function () {


    });

    function searchFunction() {
        var input, filter, ul, li, a, i;
        input = document.getElementById("searchtext");
        filter = input.value.toUpperCase();
        ul = document.getElementById("datalist2");
        li = $('.searchdiv');
        for (i = 0; i < li.length; i++) {
            txtValue = li[i].textContent || li[i].innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                li[i].style.display = "";
            } else {
                li[i].style.display = "none";
            }
        }
    }

</script>


