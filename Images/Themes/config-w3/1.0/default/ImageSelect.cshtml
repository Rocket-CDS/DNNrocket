@inherits DNNrocketAPI.render.DNNrocketTokens<Simplisity.SimplisityRazor>
@using DNNrocketAPI;
@using Simplisity;

@AddProcessData("resourcepath", "/DesktopModules/DNNrocket/api/App_LocalResources/")

<div id="dnnrocket_deleteimagelist">
    <input id="dnnrocket-imagelist" type="hidden" value="" />
</div>

<div id="rocketimageselect" class="w3-modal">
    <div class="w3-modal-content" style="width:60%;">

        <header class="w3-theme-d5 w3-center" style="height: 38.5px;">
            <span onclick="dnnrocketimages_closethelist();" class="w3-button w3-display-topright">&times;</span>
            <h4>@ResourceKey("DNNrocket.imagesfolder")</h4>
        </header>
        <div class="" style="">
            <br />
            <div class="w3-container">

                <div class="w3-row w3-margin-bottom">
                    <span class="w3-col m2 w3-button w3-teal w3-padding-8 fileuploadaction" onclick="$('#imagefileupload').trigger('click')">@ResourceKey("DNNrocket.cmdUploadButton")</span>
                    @ButtonGap()
                    <span class="w3-col m2 w3-button w3-green w3-padding-8" onclick="dnnrocketimages_useimages()">@ResourceKey("DNNrocket.cmdUseButton")</span>
                    @ButtonGap()
                    <span class="w3-col m2 w3-button w3-red w3-padding-8 simplisity_click" s-cmd="rocketimages_delete" s-before="dnnrocketimages_deleteimages" s-after="dnnrocketimages_showthelist" s-return="#dnnrocket_imageselectwrapper" s-post="#dnnrocket_deleteimagelist" s-fields='{"theme":"config-w3","template":"imagelist.cshtml","interfacekey":"imageupload","uploadrelfolder":"@Model.HeaderData.GetXmlProperty("genxml/hidden/uploadrelfolder")","imagefolder":"@Model.HeaderData.GetXmlProperty("genxml/hidden/imageselectfolder")","singleselect":"true","autoreturn":"false"}'>@ResourceKey("DNNrocket.cmdDeleteButton")</span>
                </div>

                <div class="w3-container">
                    <div class="w3-col m4 w3-white" style="border-style:dotted;">
                        <input id="imagefileupload" class="simplisity_fileupload" s-cmd="rocketimages_upload" s-reload="false" s-after="dnnrocketimages_showthelist" s-before="dnnrocketimages_beforeupload" s-return="#dnnrocket_imageselectwrapper" s-cmdurl="/desktopmodules/dnnrocket/api/api.ashx" s-fields='{"createseo":"false","theme":"config-w3","template":"imagelist.cshtml","interfacekey":"imageupload","imagerootfolder":"@Model.HeaderData.GetXmlProperty("genxml/hidden/imagerootfolder")","imagefolder":"@Model.HeaderData.GetXmlProperty("genxml/hidden/imageselectfolder")","singleselect":"true","autoreturn":"false"}' type="file" name="files[]" multiple style="display:none;">
                        <p><i>@ResourceKey("DNNrocket.dropimage")...</i></p>
                    </div>
                    <div class="w3-col m3 w3-right-align ">
                            <div class="w3-margin-top w3-hide-small w3-hide-medium">@ResourceKey("DNNrocket.resizeonupload") : </div>
                    </div>
                    <div class="w3-col m4 ">
                        <div class="w3-col m12 w3-padding">
                            <div class="w3-col m5">
                                @DropDownList(Model.HeaderData, "genxml/hidden/resize", "0,160,320,640,960,1280,-1", "None,XS,S,M,L,XL,Other", "class='w3-select w3-border imageresizedropdown' ", "640")
                            </div>
                            @ButtonGap()
                            <div class="w3-col m5">
                                @TextBox(Model.HeaderData, "genxml/hidden/resize", "disabled class='w3-input w3-border resizevalue' MaxLength='5'", "640")
                            </div>
                        </div>
                    </div>
                </div>

                    <div id="rocketimageselectlist" class="w3-container w3-margin-top">
                        <div class="w3-container">
                            @{
                                var lp = 1;
                                var imagecount = Model.List.Count();
                                foreach (string imageName in Model.List)
                                {
                                    <div class="w3-display-container w3-col m2 dnnrocket-imageselector" dnnrocket-imagename="@imageName" dnnrocket-imageurl="@Model.HeaderData.GetXmlProperty("genxml/hidden/imageselectfolder")/@imageName" dnnrocket-imagethumburl="@ThumbnailImageUrl(Model.HeaderData.GetXmlProperty("genxml/hidden/imageselectfolder") + "/" + imageName)" selectorcount="@(lp)">
                                        <img src="@ThumbnailImageUrl(Model.HeaderData.GetXmlProperty("genxml/hidden/imageselectfolder") + "/" + imageName, 150, 150)" class="w3-border w3-padding" style="width:100%" />
                                        <span class="w3-display-topright dnnrocket-imageselected " title="" style="display:none;"><i class="fas fa-check-circle"></i></span>
                                    </div>
                                    lp += 1;
                                }
                            }
                        </div>
                        <div class="w3-row">
                            <p>@imagecount</p>
                            @if (DNNrocketUtils.IsInRole("Administrator"))
                            {
                                <p class="w3-small  w3-hide-small">@Model.HeaderData.GetXmlProperty("genxml/hidden/uploadrelfolder")</p>
                            }
                        </div>
                    </div>

                </div>
            </div>
    </div>
</div>

<script>


    $(document).ready(function () {

        $('.dnnrocket-imageselector').unbind("click");
        $('.dnnrocket-imageselector').click(function () {
            dnnrocketimages_selectimage(this);
        });

        $('.imageresizedropdown').unbind("change");
        $('.imageresizedropdown').change(function () {
            if ($(this).val() === '-1') {
                $('.resizevalue').val('640');
                $('.resizevalue').prop('disabled', false)
            }
            else {
                $('.resizevalue').val($(this).val());
                $('.resizevalue').prop('disabled', true)
            }
        });

        var dnnrocketimages_resizevalue = simplisity_getCookieValue('dnnrocketimages_resizevalue') 	
        var dnnrocketimages_imageresizedropdown = simplisity_getCookieValue('dnnrocketimages_imageresizedropdown') 	

        if (typeof dnnrocketimages_imageresizedropdown !== 'undefined' && dnnrocketimages_imageresizedropdown === '-1') {
            $('.resizevalue').prop('disabled', false)
        } else {
            $('.resizevalue').prop('disabled', true)
        }
        if (typeof dnnrocketimages_resizevalue !== 'undefined' && dnnrocketimages_resizevalue !== '' && dnnrocketimages_resizevalue !== '-1') {
            $('.resizevalue').val(dnnrocketimages_resizevalue);
        }
        if (typeof dnnrocketimages_imageresizedropdown !== 'undefined' && dnnrocketimages_imageresizedropdown !== '') {
            $('.imageresizedropdown').val(dnnrocketimages_imageresizedropdown);
        }


        dnnrocketimages_changeevent();
        dnnrocketimages_removeevent();

    });

    function dnnrocketimages_beforeupload() {
        simplisity_setCookieValue('dnnrocketimages_imageresizedropdown',$('.imageresizedropdown').val()) 	
        simplisity_setCookieValue('dnnrocketimages_resizevalue',$('.resizevalue').val()) 	
        simplisity_setParamField('imageresize', $('.resizevalue').val())
    }

    function dnnrocketimages_changeevent() {
        // Used to display image list and assign the index, so we know what image to update.
        $('.dnnrocket-imagechange').unbind("click");
        $('.dnnrocket-imagechange').click(function () {
            simplisity_setCookieValue('dnnrocket-imageindex', $(this).parent().find("input:first").attr('id'));
            simplisity_setCookieValue('dnnrocket-imagewidth', $(this).parent().find("img:first").attr('imagewidth'));
            simplisity_setCookieValue('dnnrocket-imageheight', $(this).parent().find("img:first").attr('imageheight'));
            $('#rocketimageselect').show();
            $(this).removeClass('dnnrocket-imagechange');
            $(this).addClass('dnnrocket-imageremove');
            $(this).addClass('dnnrocket-imageaction');
            dnnrocketimages_removeevent();

        });
    }

    function dnnrocketimages_removeevent() {

        $('.dnnrocket-imageremove').unbind("click");
        $('.dnnrocket-imageremove').click(function () {
            $(this).parent().find("input:first").val('');
            $(this).parent().find("img:first").attr('src', '/DesktopModules/DNNrocket/API/DNNrocketThumb.ashx?src=/DesktopModules/DNNrocket/api/images/noimage2.png&w=' + $(this).parent().find("img:first").attr('imagewidth') + "&h=" + $(this).parent().find("img:first").attr('imageheight'));
            $(this).html("<i class='fas fa-edit'></i>");
            $(this).removeClass('dnnrocket-imageremove');
            $(this).addClass('dnnrocket-imagechange');
            $(this).removeClass('dnnrocket-imageaction');
            dnnrocketimages_changeevent();
        });
    }



function dnnrocketimages_selectimage(element) {

    @if (Model.HeaderData.GetXmlPropertyBool("genxml/hidden/imageselectsingle")) {
        @: dnnrocketimages_clearselection();
    }

    if ($(element).hasClass('w3-pale-green')) {
        $(element).removeClass('w3-pale-green');
        $(element).find('.dnnrocket-imageselected').hide();
    }
    else {
        $(element).addClass('w3-pale-green');
        $(element).find('.dnnrocket-imageselected').show();
    }

    @if (Model.HeaderData.GetXmlPropertyBool("genxml/hidden/imageselectautoreturn")) {
        @: dnnrocketimages_useimages();
    }
}

    function dnnrocketimages_deleteimages() {
        var imagelist = '';
        $('.dnnrocket-imageselector').each(function (index) {
            if ($(this).hasClass('w3-pale-green')) {
                var imgname = simplisity_encode($(this).attr('dnnrocket-imagename'));
                imagelist = imagelist + imgname + ";";
                $(this).removeClass('w3-pale-green');
            }
        });
        $('#dnnrocket-imagelist').val(imagelist);
    }


    function dnnrocketimages_useimages() {
        $('.dnnrocket-imageselector').each(function (index) {
            if ($(this).hasClass('w3-pale-green')) {
                var idx = simplisity_getCookieValue('dnnrocket-imageindex');
                var w = simplisity_getCookieValue('dnnrocket-imagewidth');
                var h = simplisity_getCookieValue('dnnrocket-imageheight');

                if (w === '') w = 100;
                if (h === '') h = 100;
                $('#' + idx).parent().children('img').attr('src', $(this).attr('dnnrocket-imagethumburl') + "&w=" + w + "&h=" + h);
                $('#' + idx).val($(this).attr('dnnrocket-imageurl'));
                $(this).removeClass('w3-pale-green');
                $(this).find('.dnnrocket-imageselected').hide();        

                $('#' + idx).parent().find(".dnnrocket-imageaction").html('&times;');
                $('#' + idx).parent().find(".dnnrocket-imageaction").addClass('dnnrocket-imageremove');
                $('#' + idx).parent().find(".dnnrocket-imageaction").removeClass('dnnrocket-imagechange');

            }
        });
        $('#rocketimageselect').hide();
    }


    function dnnrocketimages_clearselection() {
        $('.dnnrocket-imageselector').each(function (index) {
            if ($(this).hasClass('w3-pale-green')) {
                $(this).removeClass('w3-pale-green');
                $(this).find('.dnnrocket-imageselected').hide();        
            }
        });
    }

    function dnnrocketimages_showthelist() {
        $('#rocketimageselect').show();
    }

    function dnnrocketimages_closethelist() {
        $('.dnnrocket-imageaction').addClass('dnnrocket-imagechange');
        $('.dnnrocket-imageaction').removeClass('dnnrocket-imageremove');
        $('.dnnrocket-imageaction').removeClass('dnnrocket-imageaction');
        $('#rocketimageselect').hide();
        dnnrocketimages_changeevent();
    }

</script>