<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="addlanguage.Text" xml:space="preserve">
    <value>Add Language</value>
  </data>
  <data name="admintemplate.Text" xml:space="preserve">
    <value>Admin Template</value>
  </data>
  <data name="appstore.Text" xml:space="preserve">
    <value>App Store</value>
  </data>
  <data name="appstoregroup.Text" xml:space="preserve">
    <value>App Store Group</value>
  </data>
  <data name="appthemeexists.Text" xml:space="preserve">
    <value>AppTheme already exists. Choose a different name or prefix.</value>
  </data>
  <data name="appthemename.Text" xml:space="preserve">
    <value>AppTheme Name</value>
  </data>
  <data name="autoregeneratedetail.Text" xml:space="preserve">
    <value>detail.cshtml</value>
  </data>
  <data name="autoregenerateedit.Text" xml:space="preserve">
    <value>edit.cshtml</value>
  </data>
  <data name="autoregenerateeditlist.Text" xml:space="preserve">
    <value>editlist.cshtml</value>
  </data>
  <data name="autoregeneratesettings.Text" xml:space="preserve">
    <value>Settings.cshtml</value>
  </data>
  <data name="autoregenerateview.Text" xml:space="preserve">
    <value>view.cshtml</value>
  </data>
  <data name="builder.Text" xml:space="preserve">
    <value>AppTheme Builder</value>
  </data>
  <data name="copy.Text" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="copyapptheme.Text" xml:space="preserve">
    <value>Copy this AppTheme</value>
  </data>
  <data name="copymsg.Text" xml:space="preserve">
    <value>Copy this AppTheme to a new AppTheme.</value>
  </data>
  <data name="createnewapptheme.Text" xml:space="preserve">
    <value>Create New AppTheme</value>
  </data>
  <data name="createversion.Text" xml:space="preserve">
    <value>Create Version</value>
  </data>
  <data name="css.Text" xml:space="preserve">
    <value>CSS</value>
  </data>
  <data name="dashboard.Text" xml:space="preserve">
    <value>AppTheme</value>
  </data>
  <data name="datafields.Text" xml:space="preserve">
    <value>Data Fields</value>
  </data>
  <data name="default.Text" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="defaultcmd.Text" xml:space="preserve">
    <value>Default Command</value>
  </data>
  <data name="defaulttemplate.Text" xml:space="preserve">
    <value>Default Template</value>
  </data>
  <data name="defaultvalues.Text" xml:space="preserve">
    <value>Default Values</value>
  </data>
  <data name="deleteversion.Text" xml:space="preserve">
    <value>Delete Version</value>
  </data>
  <data name="dependancies.Note" xml:space="preserve">
    <value>NOTE: Dependancies are only used in the front website view.  For Admin use "AdminFirstHeader.cshtml".</value>
  </data>
  <data name="dependancies.Text" xml:space="preserve">
    <value>Dependancies</value>
  </data>
  <data name="details.Text" xml:space="preserve">
    <value>AppTheme Details</value>
  </data>
  <data name="displayname.Text" xml:space="preserve">
    <value>Display Name</value>
  </data>
  <data name="download.Text" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="downloadall.Text" xml:space="preserve">
    <value>Download All</value>
  </data>
  <data name="downloadappthemes.Text" xml:space="preserve">
    <value>Download all Appthemes for the selected Project?  - WARNING: This will overwrite existing AppThemes.</value>
  </data>
  <data name="downloadmsg.Text" xml:space="preserve">
    <value>Download AppTheme</value>
  </data>
  <data name="edit.Text" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="editmodelapptheme.Text" xml:space="preserve">
    <value>Module Level</value>
  </data>
  <data name="editmsg.Text" xml:space="preserve">
    <value>Edit an existing AppTheme.</value>
  </data>
  <data name="editor.Text" xml:space="preserve">
    <value>Editor</value>
  </data>
  <data name="editportalapptheme.Text" xml:space="preserve">
    <value>Portal Level</value>
  </data>
  <data name="editportalappthemes.Text" xml:space="preserve">
    <value>Edit Portal AppThemes</value>
  </data>
  <data name="enablesettings.Text" xml:space="preserve">
    <value>Enable Settings</value>
  </data>
  <data name="enterkey.Text" xml:space="preserve">
    <value>Entyer Key... </value>
  </data>
  <data name="entervalue.Text" xml:space="preserve">
    <value>Enter Value...</value>
  </data>
  <data name="errorprivateapptheme.Text" xml:space="preserve">
    <value>There is a problem connecting to the Private AppTheme server, please check your server details, username and password.</value>
  </data>
  <data name="exportmsg.Text" xml:space="preserve">
    <value>Export AppTheme</value>
  </data>
  <data name="fields.Text" xml:space="preserve">
    <value>Fields</value>
  </data>
  <data name="filename.Text" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="ftpfail.Text" xml:space="preserve">
    <value>FTP Failed, No AppTheme export file found.</value>
  </data>
  <data name="geneditform.Text" xml:space="preserve">
    <value>Generate Edit</value>
  </data>
  <data name="gensettingform.Text" xml:space="preserve">
    <value>Generate Settings</value>
  </data>
  <data name="genviewform.Text" xml:space="preserve">
    <value>Generate View</value>
  </data>
  <data name="images.Text" xml:space="preserve">
    <value>Images</value>
  </data>
  <data name="imageupload.Msg" xml:space="preserve">
    <value>Upload your images here, by dragging and dropping or paste from the clipboard on the area below.  Or by using the upload button to select images from your file system.</value>
  </data>
  <data name="imageupload.Text" xml:space="preserve">
    <value>Image Upload</value>
  </data>
  <data name="install.Text" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="installall.Text" xml:space="preserve">
    <value>Install All</value>
  </data>
  <data name="installed.Text" xml:space="preserve">
    <value>Installed</value>
  </data>
  <data name="isonlist.Text" xml:space="preserve">
    <value>On List</value>
  </data>
  <data name="javascript.Text" xml:space="preserve">
    <value>Javascript</value>
  </data>
  <data name="js.Text" xml:space="preserve">
    <value>JS</value>
  </data>
  <data name="lastupdate.Text" xml:space="preserve">
    <value>Last Updated</value>
  </data>
  <data name="localversion.Text" xml:space="preserve">
    <value>Local Version</value>
  </data>
  <data name="name.Text" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="new.Text" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="newmsg.Text" xml:space="preserve">
    <value>Create new AppTheme, based on an existing one or from a blank canvas.</value>
  </data>
  <data name="nolocal.Text" xml:space="preserve">
    <value>You do not have any local AppThemes.  Create an Apptheme, import or download pre-defined AppThemes from online repositories.</value>
  </data>
  <data name="onlineprivatelist.Text" xml:space="preserve">
    <value>Online Private AppThemes</value>
  </data>
  <data name="onlinepubliclist.Text" xml:space="preserve">
    <value>Online Public AppThemes</value>
  </data>
  <data name="onlinerocketlist.Text" xml:space="preserve">
    <value>Online Rocket AppThemes</value>
  </data>
  <data name="prefix.Text" xml:space="preserve">
    <value>Prefix</value>
  </data>
  <data name="publicserver.Text" xml:space="preserve">
    <value>Public Server</value>
  </data>
  <data name="quickedit.Text" xml:space="preserve">
    <value>Quick Edit</value>
  </data>
  <data name="razoreditsu.Text" xml:space="preserve">
    <value>NOTE: For security only the SuperUser can edit razor (.cshtml) templates.</value>
  </data>
  <data name="rebuild.Text" xml:space="preserve">
    <value>Rebuild</value>
  </data>
  <data name="rebuildfromfieldsmsg.Text" xml:space="preserve">
    <value>Rebuild from Field list ?  (Keys matching fields will be updated, missing keys will be added, all other keys will be untouched.)</value>
  </data>
  <data name="regenerate.Text" xml:space="preserve">
    <value>Regenerate Templates</value>
  </data>
  <data name="resources.Text" xml:space="preserve">
    <value>Resources</value>
  </data>
  <data name="resx.Text" xml:space="preserve">
    <value>RESX</value>
  </data>
  <data name="rocketapptheme.Text" xml:space="preserve">
    <value>Local AppThemes</value>
  </data>
  <data name="saveas.Text" xml:space="preserve">
    <value>Save As</value>
  </data>
  <data name="search.Text" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="searchapptheme.Text" xml:space="preserve">
    <value>Search for AppThemes</value>
  </data>
  <data name="searchlanguage.Text" xml:space="preserve">
    <value>Search for language</value>
  </data>
  <data name="selectapptheme.Text" xml:space="preserve">
    <value>Select AppTheme</value>
  </data>
  <data name="selectappthememsgedit.Text" xml:space="preserve">
    <value>Select the AppTheme you wish to edit.</value>
  </data>
  <data name="selectappthememsgnew.Text" xml:space="preserve">
    <value>Select the AppTheme you wish to use as a base OR select "Blank" to start a new AppTheme from fresh.</value>
  </data>
  <data name="selectappthememsgversion.Text" xml:space="preserve">
    <value>Select the AppTheme you wish to create a new version of.</value>
  </data>
  <data name="selectsystem.Text" xml:space="preserve">
    <value>Select System Application</value>
  </data>
  <data name="selectversion.Text" xml:space="preserve">
    <value>Select Version</value>
  </data>
  <data name="serverversion.Text" xml:space="preserve">
    <value>Server Version</value>
  </data>
  <data name="settingfields.Text" xml:space="preserve">
    <value>Setting Fields</value>
  </data>
  <data name="summary.Text" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="systemlevel.Text" xml:space="preserve">
    <value>System Level</value>
  </data>
  <data name="systemleveleditmsg.Text" xml:space="preserve">
    <value>System level templates can only be edited in the GitHub repo and downloaded to this installation.</value>
  </data>
  <data name="templates.Text" xml:space="preserve">
    <value>Templates</value>
  </data>
  <data name="themetype.Text" xml:space="preserve">
    <value>Single Form,List and Detail</value>
  </data>
  <data name="uninstall.Text" xml:space="preserve">
    <value>Uninstall</value>
  </data>
  <data name="upload.Text" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="uploadapptheme.Text" xml:space="preserve">
    <value>Upload AppTheme to Server</value>
  </data>
  <data name="uploadmsg.Text" xml:space="preserve">
    <value>Upload AppTheme</value>
  </data>
  <data name="version.Text" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="versioncheck.Text" xml:space="preserve">
    <value>Version Check</value>
  </data>
  <data name="versioncheckequal.Text" xml:space="preserve">
    <value>The server version of this AppTheme is the same as the local AppTheme.  If you want to continue with the upload, click the upload button.</value>
  </data>
  <data name="versioncheckmsg.Text" xml:space="preserve">
    <value>The verison of the AppTheme on the server is newer than this version.  If you upload you will delete the AppTheme on the server.  If you want to continue with the upload, click the upload button.</value>
  </data>
  <data name="versionmsg.Text" xml:space="preserve">
    <value>Create a new version of this AppTheme.</value>
  </data>
  <data name="viewtemplate.Text" xml:space="preserve">
    <value>View template</value>
  </data>
</root>