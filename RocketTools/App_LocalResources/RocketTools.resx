<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="actions.Text" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="adddefaultroles.Confirm" xml:space="preserve">
    <value>This will create all the default roles that the Rocket Framework uses.</value>
  </data>
  <data name="adddefaultroles.Text" xml:space="preserve">
    <value>Add Default Rocket Roles</value>
  </data>
  <data name="applyroles.Confirm" xml:space="preserve">
    <value>This action with add and remove EDIT permissions to the modules selected. Are you sure?</value>
  </data>
  <data name="applyroles.Text" xml:space="preserve">
    <value>Apply EDIT permissions to Roles </value>
  </data>
  <data name="assembly.Text" xml:space="preserve">
    <value>Assembly</value>
  </data>
  <data name="clone.Confirm" xml:space="preserve">
    <value>Clone the selected module to ALL the selected pages?</value>
  </data>
  <data name="clone.Text" xml:space="preserve">
    <value>Clone</value>
  </data>
  <data name="clonesok.Text" xml:space="preserve">
    <value>The module has been cloned to the selected pages.</value>
  </data>
  <data name="companykey.Help" xml:space="preserve">
    <value>A DNNrocket company key is used for license administration and links this website to a company.  Multiple websites can have the same company key.  You can find company keys in your &lt;a href='https://www.nevoweb.com' target='_blank'&gt;DNNrocket account&lt;/a&gt; under the companies section.</value>
  </data>
  <data name="companykey.Text" xml:space="preserve">
    <value>Company Key</value>
  </data>
  <data name="copylanguage.Confirm" xml:space="preserve">
    <value>Copy Language?  This will OVERWRITE the destination langauge.  </value>
  </data>
  <data name="copylanguage.Text" xml:space="preserve">
    <value>Copy Language</value>
  </data>
  <data name="datatype.Text" xml:space="preserve">
    <value>Data Type</value>
  </data>
  <data name="deletebackup.Confirm" xml:space="preserve">
    <value>Delete this BackUp ?</value>
  </data>
  <data name="deletebackupall.Confirm" xml:space="preserve">
    <value>Delete ALL BackUps ?</value>
  </data>
  <data name="destinationlanguage.Text" xml:space="preserve">
    <value>Destination Language</value>
  </data>
  <data name="disablealternate.Text" xml:space="preserve">
    <value>Disable Alternate</value>
  </data>
  <data name="disablecanonical.Text" xml:space="preserve">
    <value>Disable Canonical</value>
  </data>
  <data name="edit.Text" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="editpageurl.Text" xml:space="preserve">
    <value>Edit Page URL</value>
  </data>
  <data name="indexanddnn.Text" xml:space="preserve">
    <value>Reindex Database Index and DNN search</value>
  </data>
  <data name="language.Text" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="menuandurlsettings3.Text" xml:space="preserve">
    <value>Style Helper</value>
  </data>
  <data name="menuandurlsettings1.Text" xml:space="preserve">
    <value>Menu Providers</value>
  </data>
  <data name="menuandurlsettings2.Text" xml:space="preserve">
    <value>URL Action Params</value>
  </data>
  <data name="moduleclone.Help" xml:space="preserve">
    <value>Modules can be cloned across the site using this interface.  Select the page where the module you want to clone is on.  Select the module and then select the pages you want to clone it to.  The system will try and place the clone in the same container, if the same container does not exist on the destination page, the cloned module will be placed in the main content container.</value>
  </data>
  <data name="moduleroles.Help" xml:space="preserve">
    <value>Module Roles can be added or removed from multiple modules across the entire site.  The EDIT permissions will be activated when the module is updated with a new role.  For more granular control use the standard module interface. </value>
  </data>
  <data name="modules.Text" xml:space="preserve">
    <value>Modules</value>
  </data>
  <data name="namespaceclass.Text" xml:space="preserve">
    <value>Namespace.Class</value>
  </data>
  <data name="next.Text" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="ok.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="page.Text" xml:space="preserve">
    <value>Page</value>
  </data>
  <data name="pageadmin.Text" xml:space="preserve">
    <value>Page Admin</value>
  </data>
  <data name="pagedescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="pagelocalization.Text" xml:space="preserve">
    <value>Page Localization</value>
  </data>
  <data name="pagename.Text" xml:space="preserve">
    <value>Page Name</value>
  </data>
  <data name="pages.Text" xml:space="preserve">
    <value>Pages</value>
  </data>
  <data name="pagetagwords.Text" xml:space="preserve">
    <value>Tag Words (Optional)</value>
  </data>
  <data name="pagetitle.Text" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="permissions.Text" xml:space="preserve">
    <value>Permissions</value>
  </data>
  <data name="portaladmin.Text" xml:space="preserve">
    <value>Portal Admin</value>
  </data>
  <data name="previous.Text" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="providers.Text" xml:space="preserve">
    <value>Extra Providers List  (Assembly,Namespace.Class)</value>
  </data>
  <data name="queryparam.Text" xml:space="preserve">
    <value>URL parameter key</value>
  </data>
  <data name="queryparams.Text" xml:space="preserve">
    <value>Query Params for article ID</value>
  </data>
  <data name="queryparamsduplicate.Text" xml:space="preserve">
    <value>WARNING: There are duplicate URL parameter keys, this may stop SEO working.</value>
  </data>
  <data name="recycleapppool.Text" xml:space="preserve">
    <value>Recycle AppPool</value>
  </data>
  <data name="refresh.Text" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="remove.Text" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="removecss.Text" xml:space="preserve">
    <value>Remove CSS</value>
  </data>
  <data name="restorebackup.Confirm" xml:space="preserve">
    <value>Restore Backup?  This will OVERWRITE the current data for all languages.</value>
  </data>
  <data name="retry.Text" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="return.Text" xml:space="preserve">
    <value>Return</value>
  </data>
  <data name="rocketactions.Text" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="rocketclones.Text" xml:space="preserve">
    <value>Clone Modules</value>
  </data>
  <data name="rocketlang.Help" xml:space="preserve">
    <value>You can copy the language records of all DNNrocket modules on the site.  select a DNNrocket system, a language to copy and a destination language.  Only DNNrocket modules will copy languages. &lt;br/&gt;&lt;br/&gt;
The selected “Copy Language” will replace the “Destination Language”.  ALL content data of the module will be BackUpd to a history record, which can be restored.  WARNING!! This action will OVERWRITE the “Destination Language” with the “Copy Language”.</value>
  </data>
  <data name="rocketlang.Text" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="rocketroles.Text" xml:space="preserve">
    <value>Module Roles</value>
  </data>
  <data name="roles.Text" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="rolesok.Text" xml:space="preserve">
    <value>The Roles has been saved to the modules.</value>
  </data>
  <data name="save.Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="searchpattern.Text" xml:space="preserve">
    <value>Regex Search Pattern (filename)</value>
  </data>
  <data name="sourcelanguage.Text" xml:space="preserve">
    <value>Source Language</value>
  </data>
  <data name="tokenprefix.Text" xml:space="preserve">
    <value>Page Token Prefix</value>
  </data>
  <data name="topage.Text" xml:space="preserve">
    <value>Destination Page</value>
  </data>
  <data name="uncheckall.Text" xml:space="preserve">
    <value>Uncheck All</value>
  </data>
  <data name="update.Text" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="url.Text" xml:space="preserve">
    <value>URL</value>
  </data>
  <data name="validate.Text" xml:space="preserve">
    <value>Validate Portal Data</value>
  </data>
</root>