<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Data.ItemID" xml:space="preserve">
    <value>@info.ItemID</value>
  </data>
  <data name="Data.ModuleId" xml:space="preserve">
    <value>@Model.ModuleId</value>
  </data>
  <data name="Data.ModuleIdDataSource" xml:space="preserve">
    <value>@Model.ModuleIdDataSource</value>
  </data>
  <data name="Data.ModuleRef" xml:space="preserve">
    <value>@Model.ModuleRef</value>
  </data>
  <data name="Razor.AddPageCssLinkHeader" xml:space="preserve">
    <value>@AddPageCssLinkHeader(string pageId, string cssRelPath, string attributes = "")</value>
    <comment>Adds a CSS script link to the page header. </comment>
  </data>
  <data name="Razor.AddPageJsScriptHeader" xml:space="preserve">
    <value>@AddPageJsScriptHeader(string pageId, string jsRelPath, string attributes = "")</value>
    <comment>Adds a JS script link to the page header. </comment>
  </data>
  <data name="Razor.AddPreProcessData" xml:space="preserve">
    <value>@AddPreProcessData(String metaKey, String metaValue,String templateFullName,String moduleId)</value>
  </data>
  <data name="Razor.AddProcessData" xml:space="preserve">
    <value>@AddProcessData(String metaKey, String metaValue, String templateFullName)</value>
  </data>
  <data name="Razor.BreakOf" xml:space="preserve">
    <value>@BreakOf(info, String xpath)</value>
    <comment>Display a data field string converting the newline to a html break</comment>
  </data>
  <data name="Razor.BreakOf1" xml:space="preserve">
    <value>@BreakOf(IEncodedString strIn)</value>
    <comment>Display a IEncodedString converting the newline to a html break</comment>
  </data>
  <data name="Razor.BreakOf2" xml:space="preserve">
    <value>@BreakOf(String strIn)</value>
    <comment>Display a string converting the newline to a html break</comment>
  </data>
  <data name="Razor.ButtonGap" xml:space="preserve">
    <value>@ButtonGap(int gapSize = 10)</value>
  </data>
  <data name="Razor.CheckBox" xml:space="preserve">
    <value>@CheckBox(info, "genxml/",String text, String attributes = "", Boolean defaultValue = false, bool localized = false, int row = 0, string listname = "")</value>
    <comment>Display CheckBox</comment>
  </data>
  <data name="Razor.CheckBoxList" xml:space="preserve">
    <value>@CheckBoxList(info, "genxml/", String datavalue, String datatext, String attributes = "", Boolean defaultValue = false, bool localized = false, int row = 0, string listname = "")</value>
    <comment>Display CheckBox List with String data input</comment>
  </data>
  <data name="Razor.CheckBoxListOf" xml:space="preserve">
    <value>@CheckBoxListOf(info, "genxml/", String datavalue, String datatext, String attributes = "")</value>
  </data>
  <data name="Razor.CKEditor" xml:space="preserve">
    <value>@CKEditor(info, "genxml/", string attributes, string startupfile, bool localized = false, int row = 0, string listname = "")</value>
  </data>
  <data name="Razor.CKEditor1" xml:space="preserve">
    <value>@CKEditor(info, "genxml/", String attributes = "")</value>
  </data>
  <data name="Razor.CKEditorFull" xml:space="preserve">
    <value>@CKEditorFull(info, "genxml/", String attributes, string startupfile = "startupfull.js", bool localized = false, int row = 0, string listname = "")</value>
  </data>
  <data name="Razor.CKEditorFull1" xml:space="preserve">
    <value>@CKEditorFull(info, "genxml/", String attributes = "", bool localized = false, int row = 0, string listname = "")</value>
  </data>
  <data name="Razor.DataSourceList" xml:space="preserve">
    <value>@DataSourceList(info, int systemid, "genxml/", string attributes = "", bool allowEmpty = true, bool localized = false)</value>
  </data>
  <data name="Razor.DocumentEdit" xml:space="preserve">
    <value>@DocumentEdit(info, string fieldId, string attributes = "", bool localized = true, int row = 0, string listname = "")</value>
  </data>
  <data name="Razor.DownloadDocument" xml:space="preserve">
    <value>@DownloadDocument(int ItemId, int row, string fieldId, string text = "", string attributes = "")</value>
  </data>
  <data name="Razor.DropDownList" xml:space="preserve">
    <value>@DropDownList(info, "genxml/", Dictionary&lt;string,string&gt; dataDictionary, String attributes = "", String defaultValue = "", bool localized = false, int row = 0, string listname = "")</value>
    <comment>Display DropDown List with Dictionary data input</comment>
  </data>
  <data name="Razor.DropDownList1" xml:space="preserve">
    <value>@DropDownList(info, "genxml/", String datavalue, String datatext, String attributes = "", String defaultValue = "", bool localized = false, int row = 0, string listname = "")</value>
    <comment>Display DropDown List with String data input</comment>
  </data>
  <data name="Razor.EditFlag" xml:space="preserve">
    <value>@EditFlag(string classvalues = "")</value>
  </data>
  <data name="Razor.EmailOf" xml:space="preserve">
    <value>@EmailOf(info, String xpath)</value>
    <comment>Display a data field email string as Email Linkand cloak email</comment>
  </data>
  <data name="Razor.FileSelectList" xml:space="preserve">
    <value>@FileSelectList(string selectedfilename, String mappathRootFolder, String attributes = "", Boolean allowEmpty = true)</value>
  </data>
  <data name="Razor.FileSelectList1" xml:space="preserve">
    <value>@FileSelectList(info, "genxml/", String mappathRootFolder, String attributes = "", Boolean allowEmpty = true, bool localized = false)</value>
  </data>
  <data name="Razor.FolderSelectList" xml:space="preserve">
    <value>@FolderSelectList(info, "genxml/", String mappathRootFolder, String attributes = "", Boolean allowEmpty = true, bool localized = false)</value>
  </data>
  <data name="Razor.getChecked" xml:space="preserve">
    <value>@getChecked(info, "genxml/", Boolean defaultValue)</value>
  </data>
  <data name="Razor.getIdFromXpath" xml:space="preserve">
    <value>@getIdFromXpath("genxml/", int row)</value>
  </data>
  <data name="Razor.GetTabUrlByGuid" xml:space="preserve">
    <value>@GetTabUrlByGuid(String tabguid)</value>
  </data>
  <data name="Razor.GetTabUrlByGuid1" xml:space="preserve">
    <value>@GetTabUrlByGuid(info, String xpath)</value>
  </data>
  <data name="Razor.getUpdateAttr" xml:space="preserve">
    <value>@getUpdateAttr("genxml/", String attributes, bool localized)</value>
  </data>
  <data name="Razor.HiddenField" xml:space="preserve">
    <value>@HiddenField(info, "genxml/", String attributes = "", String defaultValue = "", bool localized = false, int row = 0, string listname = "")</value>
    <comment>Display Hidden field</comment>
  </data>
  <data name="Razor.HtmlOf" xml:space="preserve">
    <value>@HtmlOf(info, String xpath)</value>
    <comment>Display a data field  string as HTML</comment>
  </data>
  <data name="Razor.HtmlOf1" xml:space="preserve">
    <value>@HtmlOf(String htmlString)</value>
    <comment>Display a string as HTML</comment>
  </data>
  <data name="Razor.ImageEdit" xml:space="preserve">
    <value>@ImageEdit(info, string fieldId, int width = 0, int height = 0,string attributes = "", bool localized = false, int row = 0, string listname = "")</value>
  </data>
  <data name="Razor.ImageEditFull" xml:space="preserve">
    <value>@ImageEditFull(info, string fieldId, int width = 140, int height = 140, string attributes = "", bool localized = false, int row = 0, string listname = "")</value>
  </data>
  <data name="Razor.ImageEditFullName" xml:space="preserve">
    <value>@ImageEditFullName(info, string fieldId, int width = 150, int height = 150, string attributes = "", bool localized = false, int row = 0, string listname = "")</value>
  </data>
  <data name="Razor.InjectHiddenFieldData" xml:space="preserve">
    <value>@InjectHiddenFieldData(info)</value>
  </data>
  <data name="Razor.LinkInternalUrl" xml:space="preserve">
    <value>@LinkInternalUrl(int portalid, int tabid, string cultureCode, PortalSettings portalSettings = null, string[] extraparams = null)</value>
  </data>
  <data name="Razor.LinkPageURL" xml:space="preserve">
    <value>@LinkPageURL(info, "genxml/", bool openInNewWindow = true, string text = "", string attributes = "")</value>
  </data>
  <data name="Razor.LinkURL" xml:space="preserve">
    <value>@LinkURL(info, "genxml/", bool openInNewWindow = true, string text = "", string attributes = "")</value>
  </data>
  <data name="Razor.RadioButtonList" xml:space="preserve">
    <value>@RadioButtonList(info, "genxml/", String datavalue, String datatext, String attributes = "", String defaultValue = "",String labelattributes = "", bool localized = false, int row = 0, string listname = "")</value>
    <comment>Display RadioButton List with String data input</comment>
  </data>
  <data name="Razor.RenderDocumentSelect" xml:space="preserve">
    <value>@RenderDocumentSelect(bool selectsingle = true, bool autoreturn = false, string uploadFolder = "docs", string razorTemplateName = "DocSelect.cshtml", string templateControlRelPath = "/DesktopModules/DNNrocket/documents/", string themeFolder = "config-w3")</value>
  </data>
  <data name="Razor.RenderImageSelect" xml:space="preserve">
    <value>@RenderImageSelect(int imagesize, bool selectsingle = true, bool autoreturn = false, string uploadFolder = "images", string razorTemplateName = "ImageSelect.cshtml", string templateControlRelPath = "/DesktopModules/DNNrocket/images/", string themeFolder = "config-w3")</value>
  </data>
  <data name="Razor.RenderPagingTemplate" xml:space="preserve">
    <value>@RenderPagingTemplate(string scmd, string spost, string sfields, string sreturn, SimplisityRazor model, string versionFolder = "1.0")</value>
  </data>
  <data name="Razor.RenderTemplate" xml:space="preserve">
    <value>@RenderTemplate(string razorTemplateName, string templateControlRelPath, string themeFolder, SimplisityRazor model, string versionFolder = "1.0", bool debugMode = false)</value>
  </data>
  <data name="Razor.ResourceKey" xml:space="preserve">
    <value>@ResourceKey(String resourceFileKey, String lang = "", String resourceExtension = "Text")</value>
  </data>
  <data name="Razor.ResourceKeyJS" xml:space="preserve">
    <value>@ResourceKeyJS(String resourceFileKey, String lang = "", String resourceExtension = "Text")</value>
  </data>
  <data name="Razor.SortableListIndex" xml:space="preserve">
    <value>@SortableListIndex(info, int row)</value>
    <comment>Puts a unique key on the list record to link langauge records for sorting</comment>
  </data>
  <data name="Razor.TabSelectList" xml:space="preserve">
    <value>@TabSelectList(info, "genxml/", String attributes = "", Boolean allowEmpty = true, bool localized = false, int row = 0, string listname = "")</value>
  </data>
  <data name="Razor.TabSelectListOnTabId" xml:space="preserve">
    <value>@TabSelectListOnTabId(info, "genxml/", String attributes = "", Boolean allowEmpty = true, bool localized = false, int row = 0, string listname = "")</value>
  </data>
  <data name="Razor.TextArea" xml:space="preserve">
    <value>@TextArea(info, "genxml/", String attributes = "", String defaultValue = "", bool localized = false, int row = 0, string listname = "")</value>
    <comment>Display TextArea field</comment>
  </data>
  <data name="Razor.TextBox" xml:space="preserve">
    <value>@TextBox(info, "genxml/", String attributes = "", String defaultValue = "", bool localized = false, int row = 0, string listname = "")</value>
    <comment>Display TextBox field</comment>
  </data>
  <data name="Razor.ThumbnailImageUrl" xml:space="preserve">
    <value>@ThumbnailImageUrl(string url, int width = 0, int height = 0, string extraurlparams = "")</value>
  </data>
  <data name="Razor.ResourceCSV" xml:space="preserve">
    <value>@ResourceCSV(String resourceFileKey, string keyListCSV, string lang = "", string resourceExtension = "Text")</value>
  </data>
</root>