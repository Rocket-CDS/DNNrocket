@inherits DNNrocketAPI.render.DNNrocketTokens<Simplisity.SimplisityRazor>
@using DNNrocketAPI;
@using Simplisity;
@using RocketMod;

@AddProcessData("resourcepath", "/DesktopModules/DNNrocket/api/App_LocalResources/")
@AddProcessData("resourcepath", "[Token:appthemeresx]")

@{
    var articleDataList = (ArticleDataList)Model.List.First();
}

<div class="w3-row w3-padding">
    <div class="w3-col m2 w3-button w3-teal w3-padding-8 simplisity_click" s-cmd="[Token:DefaultInterface]_addrow" s-fields=''>@ButtonText(ButtonTypes.add)</div>
</div>

<div class="w3-row w3-card searchdata w3-margin-top">

    <div class="">
        <div class="w3-row w3-padding">
            <input class="w3-input w3-border w3-light-grey w3-padding" autocomplete="off" type="text" placeholder="@ResourceKey("DNNrocket.search")..." id="searchtext" onkeyup="searchFunction()">
        </div>
    </div>

</div>


<div id="datasection" class="w3-row w3-margin-top">

    <ul id="datalist" class="w3-ul w3-border">

        @{
            var lp1 = 0;
        }
        @foreach (SimplisityInfo info in Model.List)
        {
            lp1 += 1;
            <li class="datalistitem w3-display-container">
                <div class="listrow w3-row w3-padding">
                    <div class="w3-col w3-button simplisity_click w3-margin-right " s-cmd="[Token:DefaultInterface]_getdetail"  s-fields='{"selecteditemid":"@info.ItemID"}' style="width: 64px;">
                        <i class="fas fa-edit w3-center" style='font-size:32px'></i>
                    </div>
                    [Token:List]
                </div>
            </li>
        }
    </ul>

</div>

<script>
    $(document).ready(function () {
        $("#datalist").disableSelection();
    });

    function searchFunction() {
        var input, filter, ul, li, a, i;
        input = document.getElementById("searchtext");
        filter = input.value.toUpperCase();
        ul = document.getElementById("datalist");
        li = ul.getElementsByTagName("li");
        for (i = 0; i < li.length; i++) {
            txtValue = li[i].textContent || li[i].innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                li[i].style.display = "";
            } else {
                li[i].style.display = "none";
            }
        }
    }

</script>


